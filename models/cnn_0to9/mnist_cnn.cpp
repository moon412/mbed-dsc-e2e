// Auto generated by utensor-cli

#include "mnist_cnn_weight.hpp"
#include "uTensor/core/context.hpp"
#include "uTensor/core/tensor.hpp"
#include "uTensor/ops/NnOps.hpp"
#include "mnist_cnn.hpp"
#include "uTensor/ops/MatrixOps.hpp"
#include "uTensor/ops/MathOps.hpp"
#include "uTensor/ops/ArrayOps.hpp"


void get_mnist_cnn_ctx(Context& ctx, Tensor* input_0) {

{ // add tensor for placeholders
    ctx.add(input_0, "x:0", 2);
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_conv1_eightbit_x__port__0_reshape_dims_0), 
            "conv1_eightbit/x__port__0/reshape_dims:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "conv1_eightbit/x__port__0/reshape:0", 2);
    ctx.push(new ReshapeOp(), 
             { "x:0", "conv1_eightbit/x__port__0/reshape_dims:0" },
             { "conv1_eightbit/x__port__0/reshape:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_conv1_eightbit_x__port__0_reduction_dims_0), 
            "conv1_eightbit/x__port__0/reduction_dims:0", 
            2);
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "conv1_eightbit/x__port__0/min:0", 1);
    ctx.push(new MinOp(), 
             { "conv1_eightbit/x__port__0/reshape:0", "conv1_eightbit/x__port__0/reduction_dims:0" },
             { "conv1_eightbit/x__port__0/min:0" });
    ctx.eval();
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "conv1_eightbit/x__port__0/max:0", 1);
    ctx.push(new MaxOp(), 
             { "conv1_eightbit/x__port__0/reshape:0", "conv1_eightbit/x__port__0/reduction_dims:0" },
             { "conv1_eightbit/x__port__0/max:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "conv1_eightbit/x__port__0/quantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "conv1_eightbit/x__port__0/quantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "conv1_eightbit/x__port__0/quantize:2", 1);
    ctx.push(new QuantizeV2Op(),
             {  "x:0",  "conv1_eightbit/x__port__0/min:0", "conv1_eightbit/x__port__0/max:0" },
             {  "conv1_eightbit/x__port__0/quantize:0",  "conv1_eightbit/x__port__0/quantize:1", "conv1_eightbit/x__port__0/quantize:2" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({3,3,1,16}, inline_Variable_0), 
            "Variable:0", 
            2);
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_conv1_eightbit_Variable__port__0_reshape_dims_0), 
            "conv1_eightbit/Variable__port__0/reshape_dims:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "conv1_eightbit/Variable__port__0/reshape:0", 2);
    ctx.push(new ReshapeOp(), 
             { "Variable:0", "conv1_eightbit/Variable__port__0/reshape_dims:0" },
             { "conv1_eightbit/Variable__port__0/reshape:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_conv1_eightbit_Variable__port__0_reduction_dims_0), 
            "conv1_eightbit/Variable__port__0/reduction_dims:0", 
            2);
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "conv1_eightbit/Variable__port__0/min:0", 1);
    ctx.push(new MinOp(), 
             { "conv1_eightbit/Variable__port__0/reshape:0", "conv1_eightbit/Variable__port__0/reduction_dims:0" },
             { "conv1_eightbit/Variable__port__0/min:0" });
    ctx.eval();
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "conv1_eightbit/Variable__port__0/max:0", 1);
    ctx.push(new MaxOp(), 
             { "conv1_eightbit/Variable__port__0/reshape:0", "conv1_eightbit/Variable__port__0/reduction_dims:0" },
             { "conv1_eightbit/Variable__port__0/max:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "conv1_eightbit/Variable__port__0/quantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "conv1_eightbit/Variable__port__0/quantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "conv1_eightbit/Variable__port__0/quantize:2", 1);
    ctx.push(new QuantizeV2Op(),
             {  "Variable:0",  "conv1_eightbit/Variable__port__0/min:0", "conv1_eightbit/Variable__port__0/max:0" },
             {  "conv1_eightbit/Variable__port__0/quantize:0",  "conv1_eightbit/Variable__port__0/quantize:1", "conv1_eightbit/Variable__port__0/quantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<int>(), "conv1/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "conv1/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "conv1/eightbit:2", 2);
    ctx.push(new QntConvOp<uint8_t, uint8_t, int>({ 1, 1, 1, 1 }, SAME), 
             { "conv1_eightbit/x__port__0/quantize:0", "conv1_eightbit/Variable__port__0/quantize:0", "conv1_eightbit/x__port__0/quantize:1", "conv1_eightbit/x__port__0/quantize:2", "conv1_eightbit/Variable__port__0/quantize:1", "conv1_eightbit/Variable__port__0/quantize:2" },
             { "conv1/eightbit:0", "conv1/eightbit:1", "conv1/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "conv1/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "conv1/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "conv1/eightbit:0", "conv1/eightbit:1", "conv1/eightbit:2" },
             { "conv1/eightbit/requant_range:0", "conv1/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "conv1/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "conv1/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "conv1/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "conv1/eightbit:0", "conv1/eightbit:1", "conv1/eightbit:2", "conv1/eightbit/requant_range:0", "conv1/eightbit/requant_range:1" },
             { "conv1/eightbit/requantize:0", "conv1/eightbit/requantize:1", "conv1/eightbit/requantize:2" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({16}, inline_Variable_1_0), 
            "Variable_1:0", 
            2);
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_Add_eightbit_Variable_1__port__0_reshape_dims_0), 
            "Add_eightbit/Variable_1__port__0/reshape_dims:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "Add_eightbit/Variable_1__port__0/reshape:0", 2);
    ctx.push(new ReshapeOp(), 
             { "Variable_1:0", "Add_eightbit/Variable_1__port__0/reshape_dims:0" },
             { "Add_eightbit/Variable_1__port__0/reshape:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_Add_eightbit_Variable_1__port__0_reduction_dims_0), 
            "Add_eightbit/Variable_1__port__0/reduction_dims:0", 
            2);
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "Add_eightbit/Variable_1__port__0/min:0", 1);
    ctx.push(new MinOp(), 
             { "Add_eightbit/Variable_1__port__0/reshape:0", "Add_eightbit/Variable_1__port__0/reduction_dims:0" },
             { "Add_eightbit/Variable_1__port__0/min:0" });
    ctx.eval();
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "Add_eightbit/Variable_1__port__0/max:0", 1);
    ctx.push(new MaxOp(), 
             { "Add_eightbit/Variable_1__port__0/reshape:0", "Add_eightbit/Variable_1__port__0/reduction_dims:0" },
             { "Add_eightbit/Variable_1__port__0/max:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "Add_eightbit/Variable_1__port__0/quantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_eightbit/Variable_1__port__0/quantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "Add_eightbit/Variable_1__port__0/quantize:2", 1);
    ctx.push(new QuantizeV2Op(),
             {  "Variable_1:0",  "Add_eightbit/Variable_1__port__0/min:0", "Add_eightbit/Variable_1__port__0/max:0" },
             {  "Add_eightbit/Variable_1__port__0/quantize:0",  "Add_eightbit/Variable_1__port__0/quantize:1", "Add_eightbit/Variable_1__port__0/quantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<int>(), "Add/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "Add/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "Add/eightbit:2", 2);
    ctx.push(new QuantizedAddOp<uint8_t, uint8_t, int>(), 
             { "conv1/eightbit/requantize:0", "conv1/eightbit/requantize:1", "conv1/eightbit/requantize:2", "Add_eightbit/Variable_1__port__0/quantize:0", "Add_eightbit/Variable_1__port__0/quantize:1",  "Add_eightbit/Variable_1__port__0/quantize:2" },
             { "Add/eightbit:0", "Add/eightbit:1",  "Add/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "Add/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "Add/eightbit:0", "Add/eightbit:1", "Add/eightbit:2" },
             { "Add/eightbit/requant_range:0", "Add/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "Add/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "Add/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "Add/eightbit:0", "Add/eightbit:1", "Add/eightbit:2", "Add/eightbit/requant_range:0", "Add/eightbit/requant_range:1" },
             { "Add/eightbit/requantize:0", "Add/eightbit/requantize:1", "Add/eightbit/requantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "h_conv1/eightbit:0", 1);
    ctx.add(new RamTensor<float>({1}), "h_conv1/eightbit:1", 1);
    ctx.add(new RamTensor<float>({1}), "h_conv1/eightbit:2", 1);
    ctx.push(new ReluOp<uint8_t, float, uint8_t>(), 
             { "Add/eightbit/requantize:0", "Add/eightbit/requantize:1", "Add/eightbit/requantize:2" },
             { "h_conv1/eightbit:0", "h_conv1/eightbit:1", "h_conv1/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "MaxPool/eightbit:0", 1);
    ctx.add(new RamTensor<float>({1}), "MaxPool/eightbit:1", 1);
    ctx.add(new RamTensor<float>({1}), "MaxPool/eightbit:2", 1);

    ctx.push(new QuantizedMaxPoolingOp<uint8_t>(2, 2, 2, 2, SAME),
             { "h_conv1/eightbit:0", "h_conv1/eightbit:1", "h_conv1/eightbit:2" }, 
             { "MaxPool/eightbit:0", "MaxPool/eightbit:1",  "MaxPool/eightbit:2" });

    
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<uint8_t>({3,3,16,32}, inline_Variable_2_quantized_const_0), 
            "Variable_2_quantized_const:0", 
            1);
}
{    
    ctx.add(new BinaryTensor<float>({1}, inline_Variable_2_quantized_min_0), 
            "Variable_2_quantized_min:0", 
            1);
}
{    
    ctx.add(new BinaryTensor<float>({1}, inline_Variable_2_quantized_max_0), 
            "Variable_2_quantized_max:0", 
            1);
}
{
    ctx.add(new RamTensor<int>(), "conv2/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "conv2/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "conv2/eightbit:2", 2);
    ctx.push(new QntConvOp<uint8_t, uint8_t, int>({ 1, 1, 1, 1 }, SAME), 
             { "MaxPool/eightbit:0", "Variable_2_quantized_const:0", "MaxPool/eightbit:1", "MaxPool/eightbit:2", "Variable_2_quantized_min:0", "Variable_2_quantized_max:0" },
             { "conv2/eightbit:0", "conv2/eightbit:1", "conv2/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "conv2/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "conv2/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "conv2/eightbit:0", "conv2/eightbit:1", "conv2/eightbit:2" },
             { "conv2/eightbit/requant_range:0", "conv2/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "conv2/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "conv2/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "conv2/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "conv2/eightbit:0", "conv2/eightbit:1", "conv2/eightbit:2", "conv2/eightbit/requant_range:0", "conv2/eightbit/requant_range:1" },
             { "conv2/eightbit/requantize:0", "conv2/eightbit/requantize:1", "conv2/eightbit/requantize:2" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({32}, inline_Variable_3_0), 
            "Variable_3:0", 
            2);
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_Add_1_eightbit_Variable_3__port__0_reshape_dims_0), 
            "Add_1_eightbit/Variable_3__port__0/reshape_dims:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "Add_1_eightbit/Variable_3__port__0/reshape:0", 2);
    ctx.push(new ReshapeOp(), 
             { "Variable_3:0", "Add_1_eightbit/Variable_3__port__0/reshape_dims:0" },
             { "Add_1_eightbit/Variable_3__port__0/reshape:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_Add_1_eightbit_Variable_3__port__0_reduction_dims_0), 
            "Add_1_eightbit/Variable_3__port__0/reduction_dims:0", 
            2);
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "Add_1_eightbit/Variable_3__port__0/min:0", 1);
    ctx.push(new MinOp(), 
             { "Add_1_eightbit/Variable_3__port__0/reshape:0", "Add_1_eightbit/Variable_3__port__0/reduction_dims:0" },
             { "Add_1_eightbit/Variable_3__port__0/min:0" });
    ctx.eval();
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "Add_1_eightbit/Variable_3__port__0/max:0", 1);
    ctx.push(new MaxOp(), 
             { "Add_1_eightbit/Variable_3__port__0/reshape:0", "Add_1_eightbit/Variable_3__port__0/reduction_dims:0" },
             { "Add_1_eightbit/Variable_3__port__0/max:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "Add_1_eightbit/Variable_3__port__0/quantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_1_eightbit/Variable_3__port__0/quantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "Add_1_eightbit/Variable_3__port__0/quantize:2", 1);
    ctx.push(new QuantizeV2Op(),
             {  "Variable_3:0",  "Add_1_eightbit/Variable_3__port__0/min:0", "Add_1_eightbit/Variable_3__port__0/max:0" },
             {  "Add_1_eightbit/Variable_3__port__0/quantize:0",  "Add_1_eightbit/Variable_3__port__0/quantize:1", "Add_1_eightbit/Variable_3__port__0/quantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<int>(), "Add_1/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "Add_1/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "Add_1/eightbit:2", 2);
    ctx.push(new QuantizedAddOp<uint8_t, uint8_t, int>(), 
             { "conv2/eightbit/requantize:0", "conv2/eightbit/requantize:1", "conv2/eightbit/requantize:2", "Add_1_eightbit/Variable_3__port__0/quantize:0", "Add_1_eightbit/Variable_3__port__0/quantize:1",  "Add_1_eightbit/Variable_3__port__0/quantize:2" },
             { "Add_1/eightbit:0", "Add_1/eightbit:1",  "Add_1/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "Add_1/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_1/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "Add_1/eightbit:0", "Add_1/eightbit:1", "Add_1/eightbit:2" },
             { "Add_1/eightbit/requant_range:0", "Add_1/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "Add_1/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_1/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "Add_1/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "Add_1/eightbit:0", "Add_1/eightbit:1", "Add_1/eightbit:2", "Add_1/eightbit/requant_range:0", "Add_1/eightbit/requant_range:1" },
             { "Add_1/eightbit/requantize:0", "Add_1/eightbit/requantize:1", "Add_1/eightbit/requantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "h_conv2/eightbit:0", 1);
    ctx.add(new RamTensor<float>({1}), "h_conv2/eightbit:1", 1);
    ctx.add(new RamTensor<float>({1}), "h_conv2/eightbit:2", 1);
    ctx.push(new ReluOp<uint8_t, float, uint8_t>(), 
             { "Add_1/eightbit/requantize:0", "Add_1/eightbit/requantize:1", "Add_1/eightbit/requantize:2" },
             { "h_conv2/eightbit:0", "h_conv2/eightbit:1", "h_conv2/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "MaxPool_1/eightbit:0", 1);
    ctx.add(new RamTensor<float>({1}), "MaxPool_1/eightbit:1", 1);
    ctx.add(new RamTensor<float>({1}), "MaxPool_1/eightbit:2", 1);

    ctx.push(new QuantizedMaxPoolingOp<uint8_t>(2, 2, 2, 2, SAME),
             { "h_conv2/eightbit:0", "h_conv2/eightbit:1", "h_conv2/eightbit:2" }, 
             { "MaxPool_1/eightbit:0", "MaxPool_1/eightbit:1",  "MaxPool_1/eightbit:2" });

    
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<uint8_t>({3,3,32,32}, inline_Variable_4_quantized_const_0), 
            "Variable_4_quantized_const:0", 
            1);
}
{    
    ctx.add(new BinaryTensor<float>({1}, inline_Variable_4_quantized_min_0), 
            "Variable_4_quantized_min:0", 
            1);
}
{    
    ctx.add(new BinaryTensor<float>({1}, inline_Variable_4_quantized_max_0), 
            "Variable_4_quantized_max:0", 
            1);
}
{
    ctx.add(new RamTensor<int>(), "conv3/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "conv3/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "conv3/eightbit:2", 2);
    ctx.push(new QntConvOp<uint8_t, uint8_t, int>({ 1, 1, 1, 1 }, SAME), 
             { "MaxPool_1/eightbit:0", "Variable_4_quantized_const:0", "MaxPool_1/eightbit:1", "MaxPool_1/eightbit:2", "Variable_4_quantized_min:0", "Variable_4_quantized_max:0" },
             { "conv3/eightbit:0", "conv3/eightbit:1", "conv3/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "conv3/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "conv3/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "conv3/eightbit:0", "conv3/eightbit:1", "conv3/eightbit:2" },
             { "conv3/eightbit/requant_range:0", "conv3/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "conv3/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "conv3/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "conv3/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "conv3/eightbit:0", "conv3/eightbit:1", "conv3/eightbit:2", "conv3/eightbit/requant_range:0", "conv3/eightbit/requant_range:1" },
             { "conv3/eightbit/requantize:0", "conv3/eightbit/requantize:1", "conv3/eightbit/requantize:2" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({32}, inline_Variable_5_0), 
            "Variable_5:0", 
            2);
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_Add_2_eightbit_Variable_5__port__0_reshape_dims_0), 
            "Add_2_eightbit/Variable_5__port__0/reshape_dims:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "Add_2_eightbit/Variable_5__port__0/reshape:0", 2);
    ctx.push(new ReshapeOp(), 
             { "Variable_5:0", "Add_2_eightbit/Variable_5__port__0/reshape_dims:0" },
             { "Add_2_eightbit/Variable_5__port__0/reshape:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_Add_2_eightbit_Variable_5__port__0_reduction_dims_0), 
            "Add_2_eightbit/Variable_5__port__0/reduction_dims:0", 
            2);
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "Add_2_eightbit/Variable_5__port__0/min:0", 1);
    ctx.push(new MinOp(), 
             { "Add_2_eightbit/Variable_5__port__0/reshape:0", "Add_2_eightbit/Variable_5__port__0/reduction_dims:0" },
             { "Add_2_eightbit/Variable_5__port__0/min:0" });
    ctx.eval();
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "Add_2_eightbit/Variable_5__port__0/max:0", 1);
    ctx.push(new MaxOp(), 
             { "Add_2_eightbit/Variable_5__port__0/reshape:0", "Add_2_eightbit/Variable_5__port__0/reduction_dims:0" },
             { "Add_2_eightbit/Variable_5__port__0/max:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "Add_2_eightbit/Variable_5__port__0/quantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_2_eightbit/Variable_5__port__0/quantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "Add_2_eightbit/Variable_5__port__0/quantize:2", 1);
    ctx.push(new QuantizeV2Op(),
             {  "Variable_5:0",  "Add_2_eightbit/Variable_5__port__0/min:0", "Add_2_eightbit/Variable_5__port__0/max:0" },
             {  "Add_2_eightbit/Variable_5__port__0/quantize:0",  "Add_2_eightbit/Variable_5__port__0/quantize:1", "Add_2_eightbit/Variable_5__port__0/quantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<int>(), "Add_2/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "Add_2/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "Add_2/eightbit:2", 2);
    ctx.push(new QuantizedAddOp<uint8_t, uint8_t, int>(), 
             { "conv3/eightbit/requantize:0", "conv3/eightbit/requantize:1", "conv3/eightbit/requantize:2", "Add_2_eightbit/Variable_5__port__0/quantize:0", "Add_2_eightbit/Variable_5__port__0/quantize:1",  "Add_2_eightbit/Variable_5__port__0/quantize:2" },
             { "Add_2/eightbit:0", "Add_2/eightbit:1",  "Add_2/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "Add_2/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_2/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "Add_2/eightbit:0", "Add_2/eightbit:1", "Add_2/eightbit:2" },
             { "Add_2/eightbit/requant_range:0", "Add_2/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "Add_2/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_2/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "Add_2/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "Add_2/eightbit:0", "Add_2/eightbit:1", "Add_2/eightbit:2", "Add_2/eightbit/requant_range:0", "Add_2/eightbit/requant_range:1" },
             { "Add_2/eightbit/requantize:0", "Add_2/eightbit/requantize:1", "Add_2/eightbit/requantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "h_conv3/eightbit:0", 1);
    ctx.add(new RamTensor<float>({1}), "h_conv3/eightbit:1", 1);
    ctx.add(new RamTensor<float>({1}), "h_conv3/eightbit:2", 1);
    ctx.push(new ReluOp<uint8_t, float, uint8_t>(), 
             { "Add_2/eightbit/requantize:0", "Add_2/eightbit/requantize:1", "Add_2/eightbit/requantize:2" },
             { "h_conv3/eightbit:0", "h_conv3/eightbit:1", "h_conv3/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "MaxPool_2/eightbit:0", 1);
    ctx.add(new RamTensor<float>({1}), "MaxPool_2/eightbit:1", 1);
    ctx.add(new RamTensor<float>({1}), "MaxPool_2/eightbit:2", 1);

    ctx.push(new QuantizedMaxPoolingOp<uint8_t>(2, 2, 2, 2, SAME),
             { "h_conv3/eightbit:0", "h_conv3/eightbit:1", "h_conv3/eightbit:2" }, 
             { "MaxPool_2/eightbit:0", "MaxPool_2/eightbit:1",  "MaxPool_2/eightbit:2" });

    
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({2}, inline_Reshape_shape_0), 
            "Reshape/shape:0", 
            1);
}
{
    ctx.add(new RamTensor<uint8_t>(), "Reshape/eightbit:0", 1);
    ctx.add(new RamTensor<float>({1}), "Reshape/eightbit:1", 1);
    ctx.add(new RamTensor<float>({1}), "Reshape/eightbit:2", 1);
    ctx.push(new QuantizedReshapeOp(),
              { "MaxPool_2/eightbit:0", "Reshape/shape:0", "MaxPool_2/eightbit:1", "MaxPool_2/eightbit:2" },
              { "Reshape/eightbit:0", "Reshape/eightbit:1", "Reshape/eightbit:2" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<uint8_t>({512,128}, inline_Variable_6_quantized_const_0), 
            "Variable_6_quantized_const:0", 
            1);
}
{    
    ctx.add(new BinaryTensor<float>({1}, inline_Variable_6_quantized_min_0), 
            "Variable_6_quantized_min:0", 
            1);
}
{    
    ctx.add(new BinaryTensor<float>({1}, inline_Variable_6_quantized_max_0), 
            "Variable_6_quantized_max:0", 
            1);
}
{
    ctx.add(new RamTensor<int>(), "MatMul/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "MatMul/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "MatMul/eightbit:2", 2);
    ctx.push(new QntMatMulOp<uint8_t, uint8_t, int>(), 
             { "Reshape/eightbit:0", "Reshape/eightbit:1", "Reshape/eightbit:2", "Variable_6_quantized_const:0", "Variable_6_quantized_min:0",  "Variable_6_quantized_max:0" },
             { "MatMul/eightbit:0", "MatMul/eightbit:1",  "MatMul/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "MatMul/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "MatMul/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "MatMul/eightbit:0", "MatMul/eightbit:1", "MatMul/eightbit:2" },
             { "MatMul/eightbit/requant_range:0", "MatMul/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "MatMul/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "MatMul/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "MatMul/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "MatMul/eightbit:0", "MatMul/eightbit:1", "MatMul/eightbit:2", "MatMul/eightbit/requant_range:0", "MatMul/eightbit/requant_range:1" },
             { "MatMul/eightbit/requantize:0", "MatMul/eightbit/requantize:1", "MatMul/eightbit/requantize:2" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({128}, inline_Variable_7_0), 
            "Variable_7:0", 
            2);
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_Add_3_eightbit_Variable_7__port__0_reshape_dims_0), 
            "Add_3_eightbit/Variable_7__port__0/reshape_dims:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "Add_3_eightbit/Variable_7__port__0/reshape:0", 2);
    ctx.push(new ReshapeOp(), 
             { "Variable_7:0", "Add_3_eightbit/Variable_7__port__0/reshape_dims:0" },
             { "Add_3_eightbit/Variable_7__port__0/reshape:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_Add_3_eightbit_Variable_7__port__0_reduction_dims_0), 
            "Add_3_eightbit/Variable_7__port__0/reduction_dims:0", 
            2);
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "Add_3_eightbit/Variable_7__port__0/min:0", 1);
    ctx.push(new MinOp(), 
             { "Add_3_eightbit/Variable_7__port__0/reshape:0", "Add_3_eightbit/Variable_7__port__0/reduction_dims:0" },
             { "Add_3_eightbit/Variable_7__port__0/min:0" });
    ctx.eval();
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "Add_3_eightbit/Variable_7__port__0/max:0", 1);
    ctx.push(new MaxOp(), 
             { "Add_3_eightbit/Variable_7__port__0/reshape:0", "Add_3_eightbit/Variable_7__port__0/reduction_dims:0" },
             { "Add_3_eightbit/Variable_7__port__0/max:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "Add_3_eightbit/Variable_7__port__0/quantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_3_eightbit/Variable_7__port__0/quantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "Add_3_eightbit/Variable_7__port__0/quantize:2", 1);
    ctx.push(new QuantizeV2Op(),
             {  "Variable_7:0",  "Add_3_eightbit/Variable_7__port__0/min:0", "Add_3_eightbit/Variable_7__port__0/max:0" },
             {  "Add_3_eightbit/Variable_7__port__0/quantize:0",  "Add_3_eightbit/Variable_7__port__0/quantize:1", "Add_3_eightbit/Variable_7__port__0/quantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<int>(), "Add_3/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "Add_3/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "Add_3/eightbit:2", 2);
    ctx.push(new QuantizedAddOp<uint8_t, uint8_t, int>(), 
             { "MatMul/eightbit/requantize:0", "MatMul/eightbit/requantize:1", "MatMul/eightbit/requantize:2", "Add_3_eightbit/Variable_7__port__0/quantize:0", "Add_3_eightbit/Variable_7__port__0/quantize:1",  "Add_3_eightbit/Variable_7__port__0/quantize:2" },
             { "Add_3/eightbit:0", "Add_3/eightbit:1",  "Add_3/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "Add_3/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_3/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "Add_3/eightbit:0", "Add_3/eightbit:1", "Add_3/eightbit:2" },
             { "Add_3/eightbit/requant_range:0", "Add_3/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "Add_3/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "Add_3/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "Add_3/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "Add_3/eightbit:0", "Add_3/eightbit:1", "Add_3/eightbit:2", "Add_3/eightbit/requant_range:0", "Add_3/eightbit/requant_range:1" },
             { "Add_3/eightbit/requantize:0", "Add_3/eightbit/requantize:1", "Add_3/eightbit/requantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "fc1/eightbit:0", 1);
    ctx.add(new RamTensor<float>({1}), "fc1/eightbit:1", 1);
    ctx.add(new RamTensor<float>({1}), "fc1/eightbit:2", 1);
    ctx.push(new ReluOp<uint8_t, float, uint8_t>(), 
             { "Add_3/eightbit/requantize:0", "Add_3/eightbit/requantize:1", "Add_3/eightbit/requantize:2" },
             { "fc1/eightbit:0", "fc1/eightbit:1", "fc1/eightbit:2" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<uint8_t>({128,10}, inline_Variable_8_quantized_const_0), 
            "Variable_8_quantized_const:0", 
            1);
}
{    
    ctx.add(new BinaryTensor<float>({1}, inline_Variable_8_quantized_min_0), 
            "Variable_8_quantized_min:0", 
            1);
}
{    
    ctx.add(new BinaryTensor<float>({1}, inline_Variable_8_quantized_max_0), 
            "Variable_8_quantized_max:0", 
            1);
}
{
    ctx.add(new RamTensor<int>(), "MatMul_1/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "MatMul_1/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "MatMul_1/eightbit:2", 2);
    ctx.push(new QntMatMulOp<uint8_t, uint8_t, int>(), 
             { "fc1/eightbit:0", "fc1/eightbit:1", "fc1/eightbit:2", "Variable_8_quantized_const:0", "Variable_8_quantized_min:0",  "Variable_8_quantized_max:0" },
             { "MatMul_1/eightbit:0", "MatMul_1/eightbit:1",  "MatMul_1/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "MatMul_1/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "MatMul_1/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "MatMul_1/eightbit:0", "MatMul_1/eightbit:1", "MatMul_1/eightbit:2" },
             { "MatMul_1/eightbit/requant_range:0", "MatMul_1/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "MatMul_1/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "MatMul_1/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "MatMul_1/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "MatMul_1/eightbit:0", "MatMul_1/eightbit:1", "MatMul_1/eightbit:2", "MatMul_1/eightbit/requant_range:0", "MatMul_1/eightbit/requant_range:1" },
             { "MatMul_1/eightbit/requantize:0", "MatMul_1/eightbit/requantize:1", "MatMul_1/eightbit/requantize:2" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({10}, inline_Variable_9_0), 
            "Variable_9:0", 
            2);
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_logits_eightbit_Variable_9__port__0_reshape_dims_0), 
            "logits_eightbit/Variable_9__port__0/reshape_dims:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "logits_eightbit/Variable_9__port__0/reshape:0", 2);
    ctx.push(new ReshapeOp(), 
             { "Variable_9:0", "logits_eightbit/Variable_9__port__0/reshape_dims:0" },
             { "logits_eightbit/Variable_9__port__0/reshape:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_logits_eightbit_Variable_9__port__0_reduction_dims_0), 
            "logits_eightbit/Variable_9__port__0/reduction_dims:0", 
            2);
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "logits_eightbit/Variable_9__port__0/min:0", 1);
    ctx.push(new MinOp(), 
             { "logits_eightbit/Variable_9__port__0/reshape:0", "logits_eightbit/Variable_9__port__0/reduction_dims:0" },
             { "logits_eightbit/Variable_9__port__0/min:0" });
    ctx.eval();
}
{   
    RamTensor<float>* out_tensor;
    out_tensor = new RamTensor<float>({ 1 });
    ctx.add(out_tensor, "logits_eightbit/Variable_9__port__0/max:0", 1);
    ctx.push(new MaxOp(), 
             { "logits_eightbit/Variable_9__port__0/reshape:0", "logits_eightbit/Variable_9__port__0/reduction_dims:0" },
             { "logits_eightbit/Variable_9__port__0/max:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<uint8_t>(), "logits_eightbit/Variable_9__port__0/quantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "logits_eightbit/Variable_9__port__0/quantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "logits_eightbit/Variable_9__port__0/quantize:2", 1);
    ctx.push(new QuantizeV2Op(),
             {  "Variable_9:0",  "logits_eightbit/Variable_9__port__0/min:0", "logits_eightbit/Variable_9__port__0/max:0" },
             {  "logits_eightbit/Variable_9__port__0/quantize:0",  "logits_eightbit/Variable_9__port__0/quantize:1", "logits_eightbit/Variable_9__port__0/quantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<int>(), "logits/eightbit:0", 2);
    ctx.add(new RamTensor<float>({1}), "logits/eightbit:1", 2);
    ctx.add(new RamTensor<float>({1}), "logits/eightbit:2", 2);
    ctx.push(new QuantizedAddOp<uint8_t, uint8_t, int>(), 
             { "MatMul_1/eightbit/requantize:0", "MatMul_1/eightbit/requantize:1", "MatMul_1/eightbit/requantize:2", "logits_eightbit/Variable_9__port__0/quantize:0", "logits_eightbit/Variable_9__port__0/quantize:1",  "logits_eightbit/Variable_9__port__0/quantize:2" },
             { "logits/eightbit:0", "logits/eightbit:1",  "logits/eightbit:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>({1}), "logits/eightbit/requant_range:0", 1);
    ctx.add(new RamTensor<float>({1}), "logits/eightbit/requant_range:1", 1);
    ctx.push(new Requantization_RangeOp(),
             { "logits/eightbit:0", "logits/eightbit:1", "logits/eightbit:2" },
             { "logits/eightbit/requant_range:0", "logits/eightbit/requant_range:1" });
    ctx.eval();
}
{   
    ctx.add(new RamTensor<uint8_t>(), "logits/eightbit/requantize:0", 1);
    ctx.add(new RamTensor<float>({1}), "logits/eightbit/requantize:1", 1);
    ctx.add(new RamTensor<float>({1}), "logits/eightbit/requantize:2", 1);
    ctx.push(new RequantizeOp(),
             { "logits/eightbit:0", "logits/eightbit:1", "logits/eightbit:2", "logits/eightbit/requant_range:0", "logits/eightbit/requant_range:1" },
             { "logits/eightbit/requantize:0", "logits/eightbit/requantize:1", "logits/eightbit/requantize:2" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>(), "logits:0", 1);
    ctx.push(new DequantizeOp(), 
             { "logits/eightbit/requantize:0", "logits/eightbit/requantize:1", "logits/eightbit/requantize:2" },
             { "logits:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<int>({1}, inline_y_pred_dimension_0), 
            "y_pred/dimension:0", 
            1);
}
{
    ctx.add(new RamTensor<int>(), "y_pred:0");
    ctx.push(new ArgMaxOp<float, int>(), 
             { "logits:0", "y_pred/dimension:0" },
             { "y_pred:0" });
}
}